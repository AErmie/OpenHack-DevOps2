name: POI (Point Of Interests) Unit Testing

trigger:
  branches:
    include:
      - '*'
    exclude:
      - main
      - master     
  paths:
    include:
      - apis/poi/*

pool:
  vmImage: 'ubuntu-latest'

stages:
# - stage: BuildImage
#   displayName: Build POI Container Image
#   jobs:
#   - job: DockerBuild
#     displayName: Docker Build and Push
#     steps: 
#     - task: Docker@2
#       displayName: 'Docker Build and Push'
#       inputs:
#         containerRegistry: 'AzContainerRegistry'
#         repository: 'devopsoh/api-poi'
#         command: 'buildAndPush'
#         Dockerfile: 'apis/poi/web/Dockerfile'
- stage: RunUnitTest
  displayName: Run Unit Tests
  jobs:  
  - job: RunUnitTest
    displayName: Run Unit Tests
    steps:
      - task: UseDotNet@2
        displayName: Install .NET SKD 2.1.x
        inputs:
          packageType: 'sdk'
          version: '2.1.504'
      - task: DotNetCoreCLI@2
        displayName: Restore Project Dependencies
        inputs:
          command: 'restore'
          projects: 'apis/poi/poi.sln'
          feedsToUse: 'select'
      - task: DotNetCoreCLI@2
        displayName: Build Solution
        inputs:
          command: 'build'
          projects: 'apis/poi/poi.sln'
      - task: DotNetCoreCLI@2
        displayName: Execute .NET Unit Tests
        inputs:
          command: 'test'
          projects: 'apis/poi/tests/UnitTests/UnitTests.csproj'
          arguments: '--logger:trx --collect "Code coverage"'
  - job: CreateWorkItem
    displayName: Create Work-Iitem on Unit Test Failure
    dependsOn: RunUnitTest
    condition: failed() # this job will only run if rununittest fails
    steps:
      - task: CreateWorkItem@1
        displayName: Create Work-Iitem on Unit Test Failure
        inputs:
          workItemType: 'Issue'
          title: 'Build $(Build.BuildId) failed'
