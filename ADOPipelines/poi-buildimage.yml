name: POI (Point Of Interests) Build Container Image

trigger: none

# this is being defined in app-ci pipeline
resources:
  pipelines:
  - pipeline: 'POI (Point Of Interests) Build Container Image'
    source: 'POI (Point Of Interests) Unit Testing'
    trigger: 
      branches:
        include: 
          - main
          - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: openhacko291ndk2acr.azurecr.io/devopsoh/api-poi:$(Build.BuildId)
  azureSubscription: AzInternalSubscription
  # To ignore SSL error uncomment the following variable
  # VSTS_ARM_REST_IGNORE_SSL_ERRORS: true
  containerRegistry: AzContainerRegistry
  repository: devopsoh/api-poi
  resourceGroupName: 'openhacko291ndk2rg'
  appName: openhacko291ndk2poi

stages:
- stage: BuildAndPush
  displayName: Build and Push Container Image
  jobs:  
  - job: BuildAndPush
    displayName: Build and Push Container Image to Azure Container Registry (ACR)
    steps:
      - task: Docker@2
        displayName: Login to Azure Container Registry (ACR)
        inputs:
          command: login
          containerRegistry: $(containerRegistry)
      - task: Docker@2
        displayName: Build Container Image
        inputs:
          repository: $(repository)
          command: build
          Dockerfile: 'apis/poi/web/Dockerfile'
          tags: $(Build.BuildId)
          # arguments: --secret id=mysecret,src=mysecret.txt
      - task: Docker@2
        displayName: Push Container Image to Azure Container Registry (ACR)
        inputs:
          containerRegistry: |
            $(containerRegistry)
          repository: $(repository)
          command: push
          tags: |
            $(Build.BuildId)
  - job: DeployContainer
    displayName: Deploy Container Image to Azure Web App for Container
    dependsOn: BuildAndPush
    condition: succeeded() # this job will only run if rununittest fails
    steps:
      - task: AzureWebAppContainer@1
        displayName: Azure Web App for Container
        inputs:
          azureSubscription: $(azureSubscription)
          resourceGroupName: $(resourceGroupName)
          appName: $(appName)
          imageName: $(imageName)
          deployToSlotOrASE: true
          slotName: 'staging'
  - job: CreateWorkItem
    displayName: Create Work-Item on Build and Push Failure
    dependsOn: BuildAndPush
    condition: failed() # this job will only run if rununittest fails
    steps:
      - task: CreateWorkItem@1
        displayName: Create Work-Item on Build and Push Failure
        inputs:
          workItemType: 'Issue'
          title: 'Build and Push $(Build.BuildId) failed'